version: '3.8'

services:
  frontend:
    build: ./frontend
    ports:
      - "80:80"
    depends_on:
      - orquestador
    networks:
      - app_network

  orquestador:
    build: ./orquestador
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DB_HOST: postgres              # Mismo nombre de servicio
      DB_PORT: 5432
      DB_USER: root                  # Cambiado a root
      DB_PASSWORD: 'admin'           # Cambiado a 'admin'
      DB_NAME: 'gestor_nuevo'         # Cambiado a gestor_nuevo
      INVENTARIO_SERVICE_URL: http://localhost:3001
      VENTAS_SERVICE_URL: http://localhost:4000
      - app_network

  autenticacion:
    build: ./servicios/autenticacion
    ports:
      - "5001:5001"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://root:admin@postgres:5432/gestor_nuevo
    networks:
      - app_network

  inventario:
    build: ./servicios/inventario
    ports:
      - "3001:3001"
    depends_on:
      - postgres
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: root
      DB_PASSWORD: 'admin'
      DB_NAME: 'gestor_nuevo'
    networks:
      - app_network

  ventas:
    build: ./servicios/ventas
    ports:
      - "4000:4000"
    depends_on:
      - postgres
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: root
      DB_PASSWORD: 'admin'
      DB_NAME: 'gestor_nuevo'
    networks:
      - app_network

  postgres:
    image: postgres:15
    container_name: postgres_db
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 'admin'
      POSTGRES_DB: 'gestor_nuevo'
    volumes:
      - pgdata:/var/lib/postgresql/data
      # Opcional: si la base de datos ya est√° inicializada, no es necesario montar ./initdb
      # - ./initdb:/docker-entrypoint-initdb.d
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root -d gestor_nuevo"]
      interval: 10s
      retries: 5
      timeout: 5s

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@admin.com"
      PGADMIN_DEFAULT_PASSWORD: "admin"
    ports:
      - "8080:80"   # pgAdmin se expone en el puerto 8080 en el host
    depends_on:
      - postgres
    networks:
      - app_network

volumes:
  pgdata:

networks:
  app_network:
